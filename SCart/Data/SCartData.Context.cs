//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SCart.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class SCartEntities : DbContext
    {
        public SCartEntities()
            : base("name=SCartEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CategoryMaster> CategoryMasters { get; set; }
        public virtual DbSet<LoginMaster> LoginMasters { get; set; }
        public virtual DbSet<ProductMaster> ProductMasters { get; set; }
        public virtual DbSet<SubCategoryMaster> SubCategoryMasters { get; set; }
        public virtual DbSet<User_Master> User_Master { get; set; }
    
        public virtual ObjectResult<SP_BindSubCategory_Result> SP_BindSubCategory(Nullable<int> categoryId)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_BindSubCategory_Result>("SP_BindSubCategory", categoryIdParameter);
        }
    
        public virtual ObjectResult<SP_GETCategory_Result> SP_GETCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETCategory_Result>("SP_GETCategory");
        }
    
        public virtual ObjectResult<SP_GETLogin_Result> SP_GETLogin(string userName, string password)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETLogin_Result>("SP_GETLogin", userNameParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SP_GETSubCategory_Result> SP_GETSubCategory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_GETSubCategory_Result>("SP_GETSubCategory");
        }
    
        public virtual ObjectResult<SP_InsertProduct_Result> SP_InsertProduct(Nullable<int> categoryId, Nullable<int> subCategoryId, string productTitle, string productName, Nullable<decimal> productPrice, Nullable<decimal> productQuentity, string productImage, string shortDiscription, string longDiscription, Nullable<int> isactive, Nullable<int> mode)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var subCategoryIdParameter = subCategoryId.HasValue ?
                new ObjectParameter("SubCategoryId", subCategoryId) :
                new ObjectParameter("SubCategoryId", typeof(int));
    
            var productTitleParameter = productTitle != null ?
                new ObjectParameter("ProductTitle", productTitle) :
                new ObjectParameter("ProductTitle", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productPriceParameter = productPrice.HasValue ?
                new ObjectParameter("ProductPrice", productPrice) :
                new ObjectParameter("ProductPrice", typeof(decimal));
    
            var productQuentityParameter = productQuentity.HasValue ?
                new ObjectParameter("ProductQuentity", productQuentity) :
                new ObjectParameter("ProductQuentity", typeof(decimal));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(string));
    
            var shortDiscriptionParameter = shortDiscription != null ?
                new ObjectParameter("ShortDiscription", shortDiscription) :
                new ObjectParameter("ShortDiscription", typeof(string));
    
            var longDiscriptionParameter = longDiscription != null ?
                new ObjectParameter("LongDiscription", longDiscription) :
                new ObjectParameter("LongDiscription", typeof(string));
    
            var isactiveParameter = isactive.HasValue ?
                new ObjectParameter("Isactive", isactive) :
                new ObjectParameter("Isactive", typeof(int));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("mode", mode) :
                new ObjectParameter("mode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_InsertProduct_Result>("SP_InsertProduct", categoryIdParameter, subCategoryIdParameter, productTitleParameter, productNameParameter, productPriceParameter, productQuentityParameter, productImageParameter, shortDiscriptionParameter, longDiscriptionParameter, isactiveParameter, modeParameter);
        }
    
        public virtual int SP_InsertSubCategory(Nullable<int> categoryId, string subCategoryName, string datails)
        {
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var subCategoryNameParameter = subCategoryName != null ?
                new ObjectParameter("SubCategoryName", subCategoryName) :
                new ObjectParameter("SubCategoryName", typeof(string));
    
            var datailsParameter = datails != null ?
                new ObjectParameter("Datails", datails) :
                new ObjectParameter("Datails", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_InsertSubCategory", categoryIdParameter, subCategoryNameParameter, datailsParameter);
        }
    
        public virtual int SP_SETCategory(string categoryName, string details, string categoryImage)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var detailsParameter = details != null ?
                new ObjectParameter("Details", details) :
                new ObjectParameter("Details", typeof(string));
    
            var categoryImageParameter = categoryImage != null ?
                new ObjectParameter("CategoryImage", categoryImage) :
                new ObjectParameter("CategoryImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SETCategory", categoryNameParameter, detailsParameter, categoryImageParameter);
        }
    
        public virtual int SP_SETUserAndLogin(string fullName, string email, string password)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_SETUserAndLogin", fullNameParameter, emailParameter, passwordParameter);
        }
    
        public virtual ObjectResult<SP_SHOWPRODUCT_Result> SP_SHOWPRODUCT()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_SHOWPRODUCT_Result>("SP_SHOWPRODUCT");
        }
    
        public virtual ObjectResult<SP_ViewProduct_Result> SP_ViewProduct(Nullable<int> productId)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_ViewProduct_Result>("SP_ViewProduct", productIdParameter);
        }
    
        public virtual int UserMaster(string fullName, string password, string email)
        {
            var fullNameParameter = fullName != null ?
                new ObjectParameter("FullName", fullName) :
                new ObjectParameter("FullName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserMaster", fullNameParameter, passwordParameter, emailParameter);
        }
    }
}
